(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{365:function(t,s,a){t.exports=a.p+"assets/img/bg2015071004.8b402883.png"},392:function(t,s,a){"use strict";a.r(s);var e=a(45),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"css中遇到的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css中遇到的问题"}},[t._v("#")]),t._v(" CSS中遇到的问题")]),t._v(" "),e("h2",{attrs:{id:"盒模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),e("p",[t._v("标准模式 盒子模型的width/height = content + padding + border + margin")]),t._v(" "),e("p",[t._v("IE模式  盒子模型的width/height = content + margin ，其中content包含上面的content + padding + border")]),t._v(" "),e("p",[t._v("两种模式通过html5 第一行的doctype区分")]),t._v(" "),e("p",[t._v("两种盒模型也可以通过box-size切换：content-box就是标准盒模型 border-box就是IE盒模型 inherit是从父div继承")]),t._v(" "),e("h2",{attrs:{id:"行内元素与块级元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#行内元素与块级元素"}},[t._v("#")]),t._v(" 行内元素与块级元素")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("行内元素，在文档流中水平排列，不可以设置宽高，宽高为元素内容的宽高，但可以设置行高line-height，不可以设置margin的上下边距。其中不能包含块级元素。"),e("code",[t._v("<span>")])])]),t._v(" "),e("li",[e("p",[t._v("块级元素，在文档流中垂直排列，可以设置宽高，宽高为元素内容的宽高加，可以设置padding和margin。其中可以包含行内元素。"),e("code",[t._v("<div>")])])]),t._v(" "),e("li",[e("p",[t._v("行内块级元素，在文档流中水平排列，可以设置宽高，宽高为元素内容的宽高加，可以设置padding和margin。其中可以包含行内元素和块级元素。display:inline-block")])])]),t._v(" "),e("p",[t._v("行内元素可以和块级元素通过display相互转换。")]),t._v(" "),e("h2",{attrs:{id:"css选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css选择器"}},[t._v("#")]),t._v(" css选择器")]),t._v(" "),e("ul",[e("li",[t._v("类选择器")]),t._v(" "),e("li",[t._v("id选择器")]),t._v(" "),e("li",[t._v("元素选择器")]),t._v(" "),e("li",[t._v("通用选择器")]),t._v(" "),e("li",[t._v("伪类选择器")]),t._v(" "),e("li",[t._v("属性选择器")])]),t._v(" "),e("p",[t._v("内联样式>内部样式>外部样式  ！important权值最高")]),t._v(" "),e("ul",[e("li",[t._v("内联样式表的权值最高 1000。")]),t._v(" "),e("li",[t._v("ID 选择器的权值为 100。")]),t._v(" "),e("li",[t._v("Class 类选择器的权值为 10。")]),t._v(" "),e("li",[t._v("HTML 标签（类型）选择器的权值为 1。")])]),t._v(" "),e("h2",{attrs:{id:"块级元素并排"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#块级元素并排"}},[t._v("#")]),t._v(" 块级元素并排")]),t._v(" "),e("ul",[e("li",[t._v("float方法 漂浮的元素脱离了文档流，可能带来布局上的混乱（不推荐）。")]),t._v(" "),e("li",[t._v("table布局 （各种各样的问题，不推荐）")]),t._v(" "),e("li",[t._v("flex弹性盒模型")]),t._v(" "),e("li",[t._v("grid栅格布局")])]),t._v(" "),e("h2",{attrs:{id:"flex弹性盒模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex弹性盒模型"}},[t._v("#")]),t._v(" flex弹性盒模型")]),t._v(" "),e("p",[e("img",{attrs:{src:a(365),alt:"flex"}}),t._v("\n推荐阮一峰老师的两篇文章http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html"),e("br"),t._v("\nhttp://www.ruanyifeng.com/blog/2015/07/flex-examples.html\n容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。")]),t._v(" "),e("p",[t._v("项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("flex"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*指定元素为flex元素*/")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("inline-flex"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*指定行内元素为flex元素*/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row | row-reverse | column | column-reverse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\*控制主轴方向*\\\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap | wrap | wrap-reverse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\*控制元素是否换行以及换行方向*\\\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-flow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <flex-direction> || <flex-wrap>"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\*此属性是以上两个属性的简写*\\\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\*定义子元素在主轴上的对齐方式*\\\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | baseline | stretch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \\*定义元素在交叉轴上的对齐方式*\\\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around | stretch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\\*定义多根轴线的对齐方式*\\\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".item")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <integer>"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\\*用来设置子元素的排列顺序，数值越小越靠前，默认为0*\\\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-grow")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\\*用来设置子元素的放大比例*\\\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-shrink")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <number>"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\\*用来设置子元素的缩小比例*\\\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-basis")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <length> | auto"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\\*定义在分配剩余空间之前，子元素所占的空间，可以设置成固定值*\\\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none | [ <"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-grow'")]),t._v("> <"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-shrink'")]),t._v(">? || <"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'flex-basis'")]),t._v("> ] \\*前面几个属性的缩写*\\\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-self")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto | flex-start | flex-end | center | baseline | stretch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\\*可以设置单个子元素不同的对齐方式*\\\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"浮动以及清除浮动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浮动以及清除浮动"}},[t._v("#")]),t._v(" 浮动以及清除浮动")]),t._v(" "),e("p",[t._v("使用float:left/right会使元素浮动，浮动元素会脱离文档流从而引起父元素的坍塌，所以使用完浮动要及时清除浮动，清除浮动有四种方法")]),t._v(" "),e("ul",[e("li",[t._v("给父元素加一个高度height:200px;")]),t._v(" "),e("li",[t._v("在浮动结束后加一个空div 设置css样式 clean:both;")]),t._v(" "),e("li",[t._v("给父级div设置css样式overflow:hidden/auto;")]),t._v(" "),e("li",[t._v("给父级元素添定义zoom")])]),t._v(" "),e("h2",{attrs:{id:"bfc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),e("p",[t._v("BFC称为块级格式化上下文，它最大的特点就是每一个BFC都相当于一个容易，相互之间不会有影响，因此可以避免很多问题，比如div合并margin问题。")]),t._v(" "),e("h3",{attrs:{id:"bfc的特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc的特性"}},[t._v("#")]),t._v(" BFC的特性")]),t._v(" "),e("ul",[e("li",[t._v("BFC中的元素从上到下依次排列")]),t._v(" "),e("li",[t._v("垂直方向上的两个div会合并外边距")]),t._v(" "),e("li",[t._v("每个元素的margin box左边和包含块的border box左边接触")]),t._v(" "),e("li",[t._v("BFC块不会与float box重叠")]),t._v(" "),e("li",[t._v("计算BFC高度时，浮动元素高度也会参与计算")]),t._v(" "),e("li",[t._v("BFC之间不会相互影响")])]),t._v(" "),e("h3",{attrs:{id:"bfc触发条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bfc触发条件"}},[t._v("#")]),t._v(" BFC触发条件")]),t._v(" "),e("ul",[e("li",[t._v("根元素，即html")]),t._v(" "),e("li",[t._v("float不为none（默认）")]),t._v(" "),e("li",[t._v("overflow不为visible（默认）")]),t._v(" "),e("li",[t._v("display为inline-block table-cell table-caption")]),t._v(" "),e("li",[t._v("position为absolute fixed")])]),t._v(" "),e("h2",{attrs:{id:"css实践中遇到的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css实践中遇到的问题"}},[t._v("#")]),t._v(" CSS实践中遇到的问题")]),t._v(" "),e("h4",{attrs:{id:"将input-type-file-伪装成一个按钮"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将input-type-file-伪装成一个按钮"}},[t._v("#")]),t._v(' 将input type="file" 伪装成一个按钮')]),t._v(" "),e("p",[t._v("具体代码见demo1")])])}),[],!1,null,null,null);s.default=n.exports}}]);