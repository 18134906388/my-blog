(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{378:function(t,v,_){t.exports=_.p+"assets/img/img1.e552b1c8.png"},379:function(t,v,_){t.exports=_.p+"assets/img/img2.e4ba9254.png"},399:function(t,v,_){"use strict";_.r(v);var e=_(45),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"前端培训课件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端培训课件"}},[t._v("#")]),t._v(" 前端培训课件")]),t._v(" "),e("p",[t._v("先看几个比较有意思的前端项目")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://love.idealclover.top/",target:"_blank",rel:"noopener noreferrer"}},[t._v("情人节礼物"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.sitexa.org/anires/public/",target:"_blank",rel:"noopener noreferrer"}},[t._v("个人简历"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://intouchmarket.huawei.com/homepage",target:"_blank",rel:"noopener noreferrer"}},[t._v("一般前端项目"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/search?q=stars%3A%3E50000&type=Repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("github前端发展趋势"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/freekiteyu/article/details/79927047",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端发展史"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("前端这几年为什么火？")]),t._v(" "),e("p",[t._v("web端相较于PC端桌面应用和移动端app有什么优势？")]),t._v(" "),e("p",[t._v("前端技术目前可以实现什么？")]),t._v(" "),e("p",[t._v("想成为一名合格的前端工程师需要学习什么？")]),t._v(" "),e("h2",{attrs:{id:"html篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html篇"}},[t._v("#")]),t._v(" HTML篇")]),t._v(" "),e("h3",{attrs:{id:"超文本标记语言-hyper-text-markup-language"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#超文本标记语言-hyper-text-markup-language"}},[t._v("#")]),t._v(" 超文本标记语言（Hyper Text Markup Language）")]),t._v(" "),e("p",[t._v("HTML不是一种编程语言，而是一种标记语言，它使用（标记）标签来描述网页，也就是说整个网页的结构就是由HTML来构成的")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Document</title>\n</head>\n<body>\n    \n</body>\n</html>\n')])])]),e("p",[t._v("上面这段代码就是最初始的页面代码，没有任何元素。")]),t._v(" "),e("ul",[e("li",[t._v("DOCTYPE: 总是位于html文档的第一行，"),e("code",[t._v("<html>")]),t._v("标签之前，用来告诉浏览器文档是使用的哪个版本进行编写的。")]),t._v(" "),e("li",[t._v("head标签: 用于定义文档的头部，描述了文档的各种属性和信息，告诉浏览器在哪里引用样式表、引用脚本等等。一般不在页面显示。")]),t._v(" "),e("li",[t._v("body标签：用于定义文档的主体，一般在页面显示的内容全都包含在body标签内。")])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("<meta>")]),t._v(" 元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。\n标签提供关于 HTML 文档的元数据。元信息不会显示在页面上，但是对于机器是可读的。\n典型的情况是，meta 元素被用于规定页面的描述、关键词、文档的作者、最后修改时间以及其他元信息。\n标签始终位于 head 元素中。\n元信息可用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他 web 服务。\n"),e("code",[t._v('charset="UTF-8"')]),t._v("是指网页的编码方式，"),e("code",[t._v("width")]),t._v("可视区域的宽度，值可为数字或关键词"),e("code",[t._v("device-width")]),t._v("，"),e("code",[t._v("intial-scale")]),t._v("页面首次被显示是可视区域的缩放级别，取值1.0则页面按实际尺寸显示，无任何缩放，"),e("code",[t._v('http-equiv="X-UA-Compatible" content="ie=edge"')]),t._v("告诉IE以最高级模式渲染文档，也就是任何 IE 版本都以当前版本所支持的最高级标准模式渲染，避免版本升级造成的影响")])]),t._v(" "),e("p",[t._v("HTML文档就可以被视为是网页，它包含（标记）标签以及纯文本。")]),t._v(" "),e("h4",{attrs:{id:"标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标签"}},[t._v("#")]),t._v(" 标签")]),t._v(" "),e("p",[t._v("标签通常成对出现，分为开始标签和结束标签")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<div>\n\tsome code\n</div>\n")])])]),e("p",[t._v("每个开始标签都必须有对应的结束标签，否则会造成页面的混乱。从开始标签到结束标签，包括里面的所有内容，称为元素。")]),t._v(" "),e("p",[t._v("当然，有一些标签内不能包含任何内容，我们称之为“空元素”，也叫自闭合标签。\n"),e("code",[t._v("area")]),t._v("、"),e("code",[t._v("base")]),t._v(", "),e("code",[t._v("br")]),t._v(", "),e("code",[t._v("col")]),t._v(", "),e("code",[t._v("command")]),t._v(", "),e("code",[t._v("embed")]),t._v(", "),e("code",[t._v("hr")]),t._v(", "),e("code",[t._v("img")]),t._v(", "),e("code",[t._v("input")]),t._v(", "),e("code",[t._v("keygen")]),t._v(", "),e("code",[t._v("link")]),t._v(", "),e("code",[t._v("meta")]),t._v(", "),e("code",[t._v("param")]),t._v(", "),e("code",[t._v("source")])]),t._v(" "),e("p",[t._v("经常用到的一些自闭合标签：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<img src="图片链接" alt="图片描述" srcset="浏览器根据宽高及像素密度来加载对应的图片资源">\n\n<br> \x3c!-- 换行 --\x3e\n\n<hr> \x3c!-- 水平线 --\x3e\n\n<input type="text"> \x3c!-- 表单元素 --\x3e\n\n<link rel="stylesheet" href=""> \x3c!-- 通常被用作外部引入CSS，也可用作定义RSS --\x3e\n\n<col> \x3c!-- 规定表格一列或者多列的属性 --\x3e\n\n<source> \x3c!-- 为媒体元素定义媒体资源 --\x3e\n\n<embed src="" type=""> \x3c!-- H5新增，定义一个容器来嵌入外部资源或者一个插件 --\x3e\n')])])]),e("p",[t._v("需要注意的一点是，自闭合标签是否应该加"),e("code",[t._v("/")]),t._v("？在XHML 1.0规范中，严格规定自闭合标签必须有"),e("code",[t._v("/")]),t._v("来闭合标签，而HTML 4.01规范则推荐不使用"),e("code",[t._v("/")]),t._v("来闭合，最新的HTML 5规范则爱用不用，都可以。")]),t._v(" "),e("h4",{attrs:{id:"三大元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三大元素"}},[t._v("#")]),t._v(" 三大元素")]),t._v(" "),e("p",[t._v("HTML元素可以分类"),e("code",[t._v("行内元素")]),t._v("、"),e("code",[t._v("块级元素")]),t._v(" 和 "),e("code",[t._v("行内块级元素")]),t._v("，这三者可以通过CSS互相转化。")]),t._v(" "),e("ul",[e("li",[t._v("行内元素：不占据一整行，大小随内容而定，不可以设置宽高和行高，可以设置外边距但只对左右外边距有用，可以设置内边距。常见"),e("code",[t._v("<a>")]),t._v(" "),e("code",[t._v("<span>")]),t._v(" "),e("code",[t._v("<em>")]),t._v("等")]),t._v(" "),e("li",[t._v("块级元素：占据一整行，可以设置宽高、行高以及内外边距，默认宽度总是与浏览器宽度一致与内容无关，可以容纳行内元素以及其他块级元素。常见"),e("code",[t._v("<div>")]),t._v(" "),e("code",[t._v("<h1>")]),t._v(" "),e("code",[t._v("<p>")]),t._v(" "),e("code",[t._v("<ul>")]),t._v(" "),e("code",[t._v("<li>")]),t._v("等")]),t._v(" "),e("li",[t._v("行内块元素：不换行，可以设置宽高等。典型的如"),e("code",[t._v("<img>")])])]),t._v(" "),e("h4",{attrs:{id:"html-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html-5"}},[t._v("#")]),t._v(" HTML 5")]),t._v(" "),e("p",[t._v("HTML5是对超文本标记语言规范的第五次重大修改，H5带来了更加丰富的语义化、表单元素以及更加强大的功能。")]),t._v(" "),e("h5",{attrs:{id:"一-语义化标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-语义化标签"}},[t._v("#")]),t._v(" 一.语义化标签")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("标签")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("<header></header>")])]),t._v(" "),e("td",[t._v("定义了文档的头部")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<footer></footer>")])]),t._v(" "),e("td",[t._v("定义了文档的尾部")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<nav></nav>")])]),t._v(" "),e("td",[t._v("定义文档的导航")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<section></section>")])]),t._v(" "),e("td",[t._v("定义文档中的节（section、区段）")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<article></article>")])]),t._v(" "),e("td",[t._v("定义页面独立的内容区域")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<aside></aside>")])]),t._v(" "),e("td",[t._v("定义页面的侧边栏内容")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<details></details>")])]),t._v(" "),e("td",[t._v("用于描述文档或文档某个部分的细节")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<summary></summary>")])]),t._v(" "),e("td",[t._v("标签包含 details 元素的标题")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<dialog></dialog>")])]),t._v(" "),e("td",[t._v("定义对话框，比如提示框")])])])]),t._v(" "),e("h5",{attrs:{id:"二-新增表单元素、类型与属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-新增表单元素、类型与属性"}},[t._v("#")]),t._v(" 二.新增表单元素、类型与属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("表单元素")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("<datalist>")])]),t._v(" "),e("td",[t._v("元素规定输入域的选项列表,使用"),e("code",[t._v("<input>")]),t._v("元素的"),e("em",[t._v("list")]),t._v("属性与"),e("code",[t._v("<datalist>")]),t._v("元素的"),e("em",[t._v("id")]),t._v("绑定")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<keygen>")])]),t._v(" "),e("td",[t._v("提供一种验证用户的可靠方法，标签规定用于表单的密钥对生成器字段")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("<output>")])]),t._v(" "),e("td",[t._v("用于不同类型的输出，如计算或脚本输出")])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("表单类型")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("color")])]),t._v(" "),e("td",[t._v("主要用于选取颜色")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("date")])]),t._v(" "),e("td",[t._v("从一个日期选择器选择一个日期")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("datetime")])]),t._v(" "),e("td",[t._v("选择一个日期（UTC 时间）")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("datetime-local")])]),t._v(" "),e("td",[t._v("选择一个日期和时间 (无时区)")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("email")])]),t._v(" "),e("td",[t._v("包含 e-mail 地址的输入域")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("month")])]),t._v(" "),e("td",[t._v("选择一个月份")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number")])]),t._v(" "),e("td",[t._v("数值的输入域")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("range")])]),t._v(" "),e("td",[t._v("一定范围内数字值的输入域")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("search")])]),t._v(" "),e("td",[t._v("用于搜索域")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("tel")])]),t._v(" "),e("td",[t._v("定义输入电话号码字段")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("time")])]),t._v(" "),e("td",[t._v("选择一个时间")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("url")])]),t._v(" "),e("td",[t._v("url地址的输入域")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("week")])]),t._v(" "),e("td",[t._v("选择周和年")])])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("表单属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("placehoder")])]),t._v(" "),e("td",[t._v("简短的提示在用户输入值前会显示在输入域上,即我们常见的输入框默认提示，在用户输入后消失")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("required")])]),t._v(" "),e("td",[t._v("是一个 boolean 属性。要求填写的输入域不能为空")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("pattern")])]),t._v(" "),e("td",[t._v("描述了一个正则表达式用于验证"),e("code",[t._v("<input>")]),t._v("元素的值")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("min 和 max")])]),t._v(" "),e("td",[t._v("设置元素最小值与最大值")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("step")])]),t._v(" "),e("td",[t._v("为输入域规定合法的数字间隔")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("height 和 width")])]),t._v(" "),e("td",[t._v("用于 image 类型的"),e("code",[t._v("<input>")]),t._v("标签的图像高度和宽度")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("autofocus")])]),t._v(" "),e("td",[t._v("是一个 boolean 属性。规定在页面加载时，域自动地获得焦点")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("multiple")])]),t._v(" "),e("td",[t._v("是一个 boolean 属性。规定"),e("code",[t._v("<input>")]),t._v("元素中可选择多个值")])])])]),t._v(" "),e("h5",{attrs:{id:"三-新的功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-新的功能"}},[t._v("#")]),t._v(" 三.新的功能")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("<video> <audio>")]),t._v(" 用于音、视频的媒体回放功能")]),t._v(" "),e("li",[e("code",[t._v("<canvas>")]),t._v(" 画布元素，标签只是容器，绘制的动作需要脚本进行控制")]),t._v(" "),e("li",[t._v("用于地理定位的 Geolocation API")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("window.navigator.geolocation {\n    getCurrentPosition:  fn  用于获取当前的位置数据\n    watchPosition: fn  监视用户位置的改变\n    clearWatch: fn  清除定位监视\n}\n")])])]),e("ul",[e("li",[t._v("对本地离线存储的更好的支持"),e("code",[t._v("localStorage")]),t._v(" "),e("code",[t._v("sessionStorage")]),t._v(" "),e("code",[t._v("indexedDB")])]),t._v(" "),e("li",[t._v("新的"),e("code",[t._v("drap and drop")]),t._v("API")])]),t._v(" "),e("h5",{attrs:{id:"补充点-协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#补充点-协议"}},[t._v("#")]),t._v(" 补充点——协议")]),t._v(" "),e("p",[e("code",[t._v("WebSocket")]),t._v(" 是对HTTP协议的一个补充，是单个 TCP 连接上进行全双工通讯的协议。\n"),e("a",{attrs:{href:"https://www.cnblogs.com/fuqiang88/p/5956363.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebSocket相关"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("最后要说的是，我们的网页应该尽量遵循web语义化。一方面是为了让浏览器可以读懂你的页面，这样做的好处是有利于SEO等；另一方面，也便于别人在维护你的页面的时候，可以一目了然。切忌为了样式层面上的作用而使用标签（如为了达到换行目的而到处使用"),e("code",[t._v("div")]),t._v("）。")]),t._v(" "),e("h2",{attrs:{id:"css篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css篇"}},[t._v("#")]),t._v(" CSS篇")]),t._v(" "),e("h3",{attrs:{id:"层叠样式表-cascading-style-sheets"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#层叠样式表-cascading-style-sheets"}},[t._v("#")]),t._v(" 层叠样式表（Cascading Style Sheets）")]),t._v(" "),e("p",[t._v("所谓的层叠样式表，也就是我们平时所说的“样式”，它是网页的表现层，如果说HTML是网页的结构，它就是网页的门面，也是高保真输出的重要部分。")]),t._v(" "),e("h4",{attrs:{id:"css选择器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css选择器"}},[t._v("#")]),t._v(" css选择器")]),t._v(" "),e("ul",[e("li",[t._v("通用选择器")]),t._v(" "),e("li",[t._v("元素（类型）选择器")]),t._v(" "),e("li",[t._v("类选择器")]),t._v(" "),e("li",[t._v("属性选择器")]),t._v(" "),e("li",[t._v("伪类选择器")]),t._v(" "),e("li",[t._v("ID 选择器")])]),t._v(" "),e("h4",{attrs:{id:"css优先级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css优先级"}},[t._v("#")]),t._v(" css优先级")]),t._v(" "),e("p",[t._v("（外部样式）External style sheet <（内部样式）Internal style sheet <（内联样式）Inline style")]),t._v(" "),e("ul",[e("li",[t._v("内联样式表的权值最高 1000。")]),t._v(" "),e("li",[t._v("ID 选择器的权值为 100。")]),t._v(" "),e("li",[t._v("Class 类选择器的权值为 10。")]),t._v(" "),e("li",[t._v("HTML 标签（类型）选择器的权值为 1。")])]),t._v(" "),e("h4",{attrs:{id:"css优先级规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css优先级规则"}},[t._v("#")]),t._v(" css优先级规则")]),t._v(" "),e("ul",[e("li",[t._v("选择器都有一个权值，权值越大越优先。")]),t._v(" "),e("li",[t._v("当权值相等时，后出现的样式表设置要优于先出现的样式表设置。")]),t._v(" "),e("li",[t._v("创作者的规则高于浏览者：即网页编写者设置的CSS 样式的优先权高于浏览器所设置的样式。")]),t._v(" "),e("li",[t._v("继承的CSS 样式不如后来指定的CSS 样式")]),t._v(" "),e("li",[t._v("在同一组属性设置中标有“!important”规则的优先级最大。")])]),t._v(" "),e("h4",{attrs:{id:"网页设计的遵从的规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#网页设计的遵从的规则"}},[t._v("#")]),t._v(" 网页设计的遵从的规则")]),t._v(" "),e("p",[t._v("网页的样式遵从两个原则："),e("code",[t._v("渐进增强")]),t._v("和"),e("code",[t._v("优雅降级")])]),t._v(" "),e("ul",[e("li",[t._v("渐进增强： 针对低版本浏览器先实现主要功能以及样式，在此基础上逐步针对高版本浏览器增强交互体验以及视觉效果。")]),t._v(" "),e("li",[t._v("优雅降级： 针对主流浏览器开发完善的功能及视觉效果，其次对低版本浏览器逐步降级兼容。")])]),t._v(" "),e("p",[t._v("通常情况下要将一张设计图转换成html页面(这里指静态页面，我们先省略动态交互效果等)，无外乎几个重点：合适的标签、布局、定位、盒模型、背景、字体等。")]),t._v(" "),e("h4",{attrs:{id:"盒模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),e("p",[t._v("所有html元素都可以看成一个盒子，css中所提到的“盒模型”本质上就是一个盒子，它包括：外边距（margin）、边框（border）、内边距（padding）、内容（content）")]),t._v(" "),e("p",[e("img",{attrs:{src:_(378),alt:"盒模型"}}),t._v(" "),e("img",{attrs:{src:_(379),alt:"盒模型"}})]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".box{\n\tmargin: 5px 5px 5px 5px; \\*设置外边距，其顺序为上右下左*\\\n\tmargin-left: 5px;\n\tmargin-right: 5px;\n\tmargin-top: 5px;\n\tmargin-bottom: 5px;\n}\n.box{\n\tpdding: 5px 5px 5px 5px; \\*设置内边距，其顺序同样为上右下左*\\\n\tpdding-left: 5px;\n\tpdding-right: 5px;\n\tpdding-top: 5px;\n\tpdding-bottom: 5px;\n}\n.box{\n\tborder: 1px solid red;\\*设置一个宽为1像素的实线红色边框*\\\n\tborder-width: 1px;\n\tborder-style: solid;\n\tborder-color: red;\n}\n")])])]),e("p",[t._v("其中，边框的样式还有")]),t._v(" "),e("ul",[e("li",[t._v("dotted  定义点状边框。在大多数浏览器中呈现为实线。")]),t._v(" "),e("li",[t._v("dashed  定义虚线。在大多数浏览器中呈现为实线。")]),t._v(" "),e("li",[t._v("double  定义双线。双线的宽度等于 border-width 的值。\n"),e("a",{attrs:{href:"http://www.w3school.com.cn/cssref/pr_border.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("更多边框样式"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("元素边框通常还会有三个属性用来设置以美化元素：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".box{\n\tborder-radius: 2px;\\*设置元素2px的圆角，接受值可为百分比*\\\n\tbox-shadow： h-shadow v-shadow blur spread color inset;\\*值依次为水平阴影位置、垂直阴影位置、模糊距离、阴影尺寸、阴影颜色、内阴影*\\\n\tborder-image: url(xxx.png) 30 30 round;\\*用于设置边框图片*\\\n}\n")])])]),e("h4",{attrs:{id:"背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),e("p",[e("code",[t._v("background")]),t._v("属性包含以下：")]),t._v(" "),e("ul",[e("li",[t._v("background-color 背景颜色")]),t._v(" "),e("li",[t._v("background-position 背景图像位置")]),t._v(" "),e("li",[t._v("background-size 背景图像尺寸")]),t._v(" "),e("li",[t._v("background-repeat 背景图像是否重复")]),t._v(" "),e("li",[t._v("background-origin 背景图片的定位区域")]),t._v(" "),e("li",[t._v("background-clip 背景图像的绘制区域")]),t._v(" "),e("li",[t._v("background-attachment 背景图像是否固定")]),t._v(" "),e("li",[t._v("background-image 规定要使用的背景图像")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".box{\n\tbackground: #00FF00 url(bgimage.gif) no-repeat fixed top;\n}\n")])])]),e("p",[t._v("上面的值不必每个都去设置。")]),t._v(" "),e("h4",{attrs:{id:"字体"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字体"}},[t._v("#")]),t._v(" 字体")]),t._v(" "),e("p",[e("code",[t._v("font")]),t._v("属性包含以下：")]),t._v(" "),e("ul",[e("li",[t._v("font-style 字体大小")]),t._v(" "),e("li",[t._v("font-variant 字体异体")]),t._v(" "),e("li",[t._v("font-weight 字体粗细")]),t._v(" "),e("li",[t._v("font-size/line-height 字号和行高")]),t._v(" "),e("li",[t._v("font-family 字体系列")])]),t._v(" "),e("p",[t._v("字体属性的设置对我们使用的字体图标同样有效。此外，不是每个系统都能提供设计稿所包含的字体系列，例如在windows的操作系统中默认就没有苹果丽黑字体。那么我们该如何在所有用户的浏览器中保持字体一致性呢？我们可以使用css3提供的"),e("code",[t._v("@font-face")]),t._v("规则。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("@font-face{\n\tfont-family: myFont; \\*定义字体的名称*\\\n\tsrc: url('Sansation_Light.ttf'), \\*字体文件的引用路径*\\\n\t\t url('Sansation_Light.eot');\n}\n")])])]),e("h4",{attrs:{id:"布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[t._v("#")]),t._v(" 布局")]),t._v(" "),e("p",[t._v("当我们拿到一张设计图的时候，首先要做的事情就是分析页面的大体结构，大致确定每一块应该使用何种标签，从上至下分析每一块大概使用了何种布局（这里脱离前端UI框架来讨论），与此同时我们应该将响应式以及浏览器兼容性考虑在内（明确使用渐进增强还是优雅降级的原则）。"),e("br"),t._v("\n对于上下结构的页面，我们很好实现，因为块级元素默认换行并且渲染顺序按照自上而下的顺序")]),t._v(" "),e("p",[t._v('那么，如果我们想实现一个"品"字型布局呢，上面一个元素我们只要使用块级元素就可以搞定，重点在于下面两个并排的元素。行内元素是默认并排显示的，但是行内元素不能嵌套其余的行内或者块级元素，这对我们页面的实现很不友好，并且语义化的角度讲，我们也应该使用块级元素。有一种元素具备了行内元素的特征以及块级元素的特征，那就是行内块级元素。我们可以通过'),e("code",[t._v("display")]),t._v("属性来改变元素的显示样式。")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".class{\n\tdisplay: inline-block;/*元素按照行内块级元素显示*/\n}\n")])])]),e("p",[t._v("该属性的一些常用属性（"),e("a",{attrs:{href:"http://www.w3school.com.cn/jsref/prop_style_display.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("更多属性"),e("OutboundLink")],1),t._v("）：")]),t._v(" "),e("ul",[e("li",[t._v("inline 元素按照行内元素显示")]),t._v(" "),e("li",[t._v("block 元素按照块级元素显示")]),t._v(" "),e("li",[t._v("none 隐藏元素（元素不占据文档流空间）")])]),t._v(" "),e("p",[t._v("使用该属性，我们可以很轻松的实现块级元素并排显示，但是需要注意的一点是，浏览器在处理行内块级元素的样式时，会将代码中标签之间的空格也渲染出来（标签换行也视作存在空格），这个空格约为"),e("code",[t._v("4px")]),t._v("。")]),t._v(" "),e("p",[t._v("此外，我们还有其他方法来实现两个元素并排显示。")]),t._v(" "),e("ol",[e("li",[e("s",[t._v("float方法 漂浮的元素脱离了文档流，可能带来布局上的混乱。")])]),t._v(" "),e("li",[e("s",[t._v("table布局")])]),t._v(" "),e("li",[t._v("flex弹性盒模型"),e("a",{attrs:{href:"https://18134906388.github.io/my-blog/blog/CSS%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98.html#flex%E5%BC%B9%E6%80%A7%E7%9B%92%E6%A8%A1%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("flex布局"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("grid栅格布局")])]),t._v(" "),e("h4",{attrs:{id:"定位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定位"}},[t._v("#")]),t._v(" 定位")]),t._v(" "),e("p",[t._v("除了常规的布局之外，有时候一些特殊的布局方式我们只通过更改元素的"),e("code",[t._v("display")]),t._v("是实现不了的，比如如何让一个元素浮在另一个元素上方？如何让一个元素始终处于窗口的最底部并且不随页面滚动？这时候我们就要用到元素的"),e("code",[t._v("position")]),t._v("属性。\n在此之前，我们先说另外一个概念——文档流。")]),t._v(" "),e("blockquote",[e("p",[t._v("将窗体自上而下分成一行行, 并在每行中按从左至右的顺序排放元素,即为文档流.(自己的理解是从头到尾按照文档的顺序，该在什么位置就在什么位置，也可以按照上面的意思理解，自上而下，自左到右的顺序)")])]),t._v(" "),e("p",[t._v("上面是一段摘自百度百科的描述，简而言之文档流就是自上而下从左往右的元素排列，每个元素都有自己的固定位置。那如何让一个元素显示在其他元素之上或者固定在某一个地方呢，这时候就要使这个元素脱离文档流。t脱离文档流的方式有两种："),e("code",[t._v("position")]),t._v("和"),e("code",[t._v("float")]),t._v("。\n这里我们详细介绍一下"),e("code",[t._v("position")]),t._v("属性，该属性的值分别有：")]),t._v(" "),e("ul",[e("li",[t._v("static 元素出现在正常文档流中")]),t._v(" "),e("li",[t._v("relative 相对定位，元素相对于其在文档流中的正常位置定位")]),t._v(" "),e("li",[t._v("absolute 绝对定位，元素脱离文档流，相对于其父级第一个定位不为static的元素定位")]),t._v(" "),e("li",[t._v("fixed 绝对定位，元素脱离文档流，相对于浏览器窗口进行定位。")])]),t._v(" "),e("p",[t._v("这里需要补充的一点是，"),e("code",[t._v("fixed")]),t._v("的元素并不是始终相对于浏览器窗口进行定位，如果设置"),e("code",[t._v("fixed")]),t._v("的元素的父元素或祖先元素存在"),e("code",[t._v("transform")]),t._v("属性的话，那么就相对于该元素进行定位。")]),t._v(" "),e("p",[t._v("以上的属性都可以配合使用")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".box{\n\tposition: absolute | fixed;\n\tleft: 20px;\n\tright: 20px;\n\ttop: 20px;\n\tbottom: 20px;\n}\n")])])]),e("p",[t._v("此外定位元素还有一个"),e("code",[t._v("z-index")]),t._v("属性配合使用，这个属性表示元素的堆叠顺序，数值越大代表三维层面离用户越近，数值可以为负数。")]),t._v(" "),e("p",[t._v("另外提供一些教程了网站，大家可以去看看，有什么忘记的属性也可以进行查询\n"),e("a",{attrs:{href:"http://www.w3school.com.cn/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("W3School"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://www.w3cplus.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("w3cplus"),e("OutboundLink")],1),t._v("\n还有一个查询属性浏览器兼容性的网站\n"),e("a",{attrs:{href:"https://caniuse.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Can I Use"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"伪类和伪元素"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪类和伪元素"}},[t._v("#")]),t._v(" 伪类和伪元素")]),t._v(" "),e("p",[t._v("伪类包含两种：状态伪类和结构性伪类。\n状态伪类是基于元素当前状态进行选择的。在与用户的交互过程中元素的状态是动态变化的，因此该元素会根据其状态呈现不同的样式。当元素处于某状态时会呈现该样式，而进入另一状态后，该样式也会失去。常见的状态伪类主要包括：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("伪类")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v(":link")]),t._v(" "),e("td",[t._v("应用于未被访问过的链接")])]),t._v(" "),e("tr",[e("td",[t._v(":hover")]),t._v(" "),e("td",[t._v("应用于鼠标悬停到的元素")])]),t._v(" "),e("tr",[e("td",[t._v(":active")]),t._v(" "),e("td",[t._v("应用于被激活的元素")])]),t._v(" "),e("tr",[e("td",[t._v(":visited")]),t._v(" "),e("td",[t._v("应用于被访问过的链接，与:link互斥")])]),t._v(" "),e("tr",[e("td",[t._v(":focus")]),t._v(" "),e("td",[t._v("应用于拥有键盘输入焦点的元素")])])])]),t._v(" "),e("p",[t._v("结构性伪类是css3新增选择器，利用dom树进行元素过滤，通过文档结构的互相关系来匹配元素，能够减少class和id属性的定义，使文档结构更简洁。常见的包括：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("伪类")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v(":first-child")]),t._v(" "),e("td",[t._v("选择某个元素的第一个子元素")])]),t._v(" "),e("tr",[e("td",[t._v(":last-child")]),t._v(" "),e("td",[t._v("选择某个元素的最后一个子元素")])]),t._v(" "),e("tr",[e("td",[t._v(":nth-child()")]),t._v(" "),e("td",[t._v("选择某个元素的一个或多个特定的子元素")])]),t._v(" "),e("tr",[e("td",[t._v(":nth-last-child()")]),t._v(" "),e("td",[t._v("选择某个元素的一个或多个特定的子元素，从这个元素的最后一个子元素开始算")])]),t._v(" "),e("tr",[e("td",[t._v(":nth-of-type()")]),t._v(" "),e("td",[t._v("选择指定的元素")])]),t._v(" "),e("tr",[e("td",[t._v(":nth-last-of-type()")]),t._v(" "),e("td",[t._v("选择指定的元素，从元素的最后一个开始计算")])]),t._v(" "),e("tr",[e("td",[t._v(":first-of-type")]),t._v(" "),e("td",[t._v("选择一个上级元素下的第一个同类子元素")])]),t._v(" "),e("tr",[e("td",[t._v(":last-of-type")]),t._v(" "),e("td",[t._v("选择一个上级元素的最后一个同类子元素")])]),t._v(" "),e("tr",[e("td",[t._v(":only-child")]),t._v(" "),e("td",[t._v("选择的元素是它的父元素的唯一一个子元素")])]),t._v(" "),e("tr",[e("td",[t._v(":only-of-type")]),t._v(" "),e("td",[t._v("选择一个元素是它的上级元素的唯一一个相同类型的子元素")])]),t._v(" "),e("tr",[e("td",[t._v(":empty")]),t._v(" "),e("td",[t._v("选择的元素里面没有任何内容")])])])]),t._v(" "),e("p",[t._v("伪元素是对元素中的特定内容进行操作，而不是描述状态。它的操作层次比伪类更深一层，因此动态性比伪类低很多。实际上，伪元素就是选取某些元素前面或后面这种普通选择器无法完成的工作。控制的内容和元素是相同的，但它本身是基于元素的抽象，并不存在于文档结构中！常见的伪元素选择器包括：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("伪元素")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v(":first-letter")]),t._v(" "),e("td",[t._v("选择元素文本的第一个字（母）")])]),t._v(" "),e("tr",[e("td",[t._v(":first-line")]),t._v(" "),e("td",[t._v("选择元素文本的第一行")])]),t._v(" "),e("tr",[e("td",[t._v(":before")]),t._v(" "),e("td",[t._v("在元素内容的最前面添加新内容")])]),t._v(" "),e("tr",[e("td",[t._v(":after")]),t._v(" "),e("td",[t._v("在元素内容的最后面添加新内容")])])])]),t._v(" "),e("h3",{attrs:{id:"css预处理器的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css预处理器的使用"}},[t._v("#")]),t._v(" css预处理器的使用")]),t._v(" "),e("p",[t._v("sass less，使css层级更加清晰，并且可以定义变量和函数。")]),t._v(" "),e("h2",{attrs:{id:"js篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js篇"}},[t._v("#")]),t._v(" JS篇")]),t._v(" "),e("p",[t._v("如果将前端项目比作一个人，HTML就是骨架，CSS是皮肤，JS是遍布全身的神经。\nJS全名JavaScript，但是和Java没有任何关系，只不过是为了借用当时Java的热度而起的名字，也就是我们现在蹭热度。")]),t._v(" "),e("h3",{attrs:{id:"js基础语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js基础语法"}},[t._v("#")]),t._v(" JS基础语法")]),t._v(" "),e("p",[t._v("每种语言的基础语法都很类似，所以有一名语言基础后，上手其他语言也是很快的。包括变量定义赋值，条件判断，循环，函数等。详细教程参考"),e("a",{attrs:{href:"http://www.w3school.com.cn/js/index.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS基础"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"js操作dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js操作dom"}},[t._v("#")]),t._v(" JS操作DOM")]),t._v(" "),e("p",[t._v("上面说JS是前端的神经，那么JS是如何和HTML CSS做交互呢？这就是下面我要将的DOM操作\n"),e("a",{attrs:{href:"http://www.w3school.com.cn/js/js_htmldom.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("基础教程"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://www.cnblogs.com/zxt-17862802783/p/7498790.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("高级教程"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("练习制作一个下拉框")])]),t._v(" "),e("h3",{attrs:{id:"js操作bom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js操作bom"}},[t._v("#")]),t._v(" JS操作BOM")]),t._v(" "),e("p",[t._v("我们说前端语言以前都是运行在浏览器中的语言，那么JS应该需要一些和浏览器交互的功能，那么BOM操作出现了\n"),e("a",{attrs:{href:"http://www.w3school.com.cn/js/js_window.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("基础教程"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://blog.csdn.net/luanpeng825485697/article/details/77010413",target:"_blank",rel:"noopener noreferrer"}},[t._v("高级教程"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"ajax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" Ajax")]),t._v(" "),e("p",[t._v("Ajax是前后端交互的核心，现在常用的Ajax技术有，jQuery的Ajax和Axios。\n"),e("a",{attrs:{href:"http://www.w3school.com.cn/js/js_ajax_intro.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("基础教程"),e("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=a.exports}}]);